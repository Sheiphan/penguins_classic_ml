[project]
name = "classic-ml"
version = "0.1.0"
requires-python = ">=3.11"
dependencies = [
    "click>=8.0.0",
    "fastapi>=0.117.1",
    "httpx>=0.25.0",
    "joblib>=1.5.2",
    "loguru>=0.7.0",
    "numpy>=2.3.3",
    "pandas>=2.3.2",
    "pydantic>=2.11.9",
    "pydantic-settings>=2.0.0",
    "pyyaml>=6.0.2",
    "scikit-learn>=1.7.2",
    "uvicorn>=0.36.0",
]

[dependency-groups]
dev = [
    # testing
    "pytest>=8.4.2",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",

    # formatting / linting
    "ruff>=0.13.1",
    "mypy>=1.0.0",
    "types-PyYAML>=6.0.0",

    # security
    "bandit>=1.7.0",
    "safety>=2.3.0,<3.0.0",

    # git hooks
    "pre-commit>=4.3.0",
]

[tool.ruff]
line-length = 88
target-version = "py311"
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.isort]
known-first-party = ["src"]
force-single-line = false
lines-after-imports = 2

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.11"
ignore_missing_imports = true
no_strict_optional = true
allow_untyped_calls = true
allow_untyped_defs = true
allow_incomplete_defs = true
allow_untyped_globals = true
disallow_untyped_calls = false
disallow_untyped_defs = false
warn_return_any = false
warn_unused_ignores = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-fail-under=75",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]
