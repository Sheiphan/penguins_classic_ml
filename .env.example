# Environment Configuration for Enterprise ML Classifier
# Copy this file to .env and modify as needed for your environment
#
# Usage:
#   cp .env.example .env
#   # Edit .env with your specific values
#   make setup

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================

# Logging level: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# Log file location (set to empty string to disable file logging)
LOG_FILE=logs/app.log

# Log rotation settings
LOG_ROTATION=1 day
LOG_RETENTION=30 days

# =============================================================================
# API SERVER CONFIGURATION
# =============================================================================

# API server host (0.0.0.0 for all interfaces, 127.0.0.1 for localhost only)
API_HOST=0.0.0.0

# API server port
API_PORT=8000

# Number of worker processes (1 for development, more for production)
API_WORKERS=1

# Enable auto-reload for development (true/false)
RELOAD=false

# Enable debug mode (true/false)
DEBUG=false

# =============================================================================
# CONFIGURATION FILES
# =============================================================================

# Path to experiment configuration file
EXPERIMENT_CONFIG=configs/experiment_default.yaml

# Path to serving configuration file
SERVING_CONFIG=configs/serving.yaml

# =============================================================================
# DATA AND MODEL PATHS
# =============================================================================

# Directory for model artifacts
MODEL_DIR=models

# Directory for data files
DATA_DIR=data

# Directory for experiment results
RESULTS_DIR=results

# Directory for log files
LOGS_DIR=logs

# Raw data file path
RAW_DATA_PATH=data/raw/penguins_lter.csv

# =============================================================================
# TRAINING CONFIGURATION
# =============================================================================

# Random seed for reproducibility
RANDOM_SEED=42

# Test set size (0.0 to 1.0)
TEST_SIZE=0.2

# Number of cross-validation folds
CV_FOLDS=5

# Stratify train/test split (true/false)
STRATIFY=true

# =============================================================================
# MODEL CONFIGURATION
# =============================================================================

# Default model type
MODEL_NAME=RandomForestClassifier

# Model registry path
MODEL_REGISTRY_PATH=models/registry.json

# =============================================================================
# DOCKER CONFIGURATION
# =============================================================================

# Python version for Docker builds
PYTHON_VERSION=3.11

# Docker image tags
TRAIN_IMAGE_TAG=ml-classifier:train
SERVE_IMAGE_TAG=ml-classifier:serve

# =============================================================================
# PRODUCTION DEPLOYMENT SETTINGS
# =============================================================================

# Resource limits for containers
MEMORY_LIMIT=2g
CPU_LIMIT=1.0

# Health check settings
HEALTH_CHECK_INTERVAL=30s
HEALTH_CHECK_TIMEOUT=10s
HEALTH_CHECK_RETRIES=3

# =============================================================================
# DEVELOPMENT SETTINGS
# =============================================================================

# Enable development mode features
DEV_MODE=false

# Pre-commit hooks enabled (true/false)
PRE_COMMIT_ENABLED=true

# Code formatting on save (true/false)
AUTO_FORMAT=true

# =============================================================================
# MONITORING AND OBSERVABILITY
# =============================================================================

# Enable metrics collection (true/false)
METRICS_ENABLED=true

# Metrics export port
METRICS_PORT=9090

# Enable request tracing (true/false)
TRACING_ENABLED=false

# =============================================================================
# SECURITY SETTINGS
# =============================================================================

# API key for authentication (leave empty to disable)
API_KEY=

# CORS allowed origins (comma-separated)
CORS_ORIGINS=http://localhost:3000,http://localhost:8080

# Enable HTTPS (true/false)
HTTPS_ENABLED=false

# SSL certificate paths (if HTTPS enabled)
SSL_CERT_PATH=
SSL_KEY_PATH=

# =============================================================================
# EXTERNAL SERVICES
# =============================================================================

# Database connection (if using external database)
DATABASE_URL=

# Redis connection (if using caching)
REDIS_URL=

# Message queue connection (if using async processing)
QUEUE_URL=

# =============================================================================
# FEATURE FLAGS
# =============================================================================

# Enable experimental features (true/false)
EXPERIMENTAL_FEATURES=false

# Enable model versioning (true/false)
MODEL_VERSIONING=true

# Enable automatic model retraining (true/false)
AUTO_RETRAIN=false

# =============================================================================
# EXAMPLE VALUES FOR DIFFERENT ENVIRONMENTS
# =============================================================================

# Development environment example:
# LOG_LEVEL=DEBUG
# API_HOST=127.0.0.1
# API_PORT=8000
# RELOAD=true
# DEBUG=true

# Production environment example:
# LOG_LEVEL=INFO
# API_HOST=0.0.0.0
# API_PORT=80
# API_WORKERS=4
# RELOAD=false
# DEBUG=false
# MEMORY_LIMIT=4g
# CPU_LIMIT=2.0

# Testing environment example:
# LOG_LEVEL=WARNING
# API_PORT=8001
# MODEL_DIR=test_models
# DATA_DIR=test_data
